

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Apr 05 22:49:46 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  01F6                     __pidataBANK0:
   218                           
   219                           ;initializer for _display
   220  01F6  343F               	retlw	63
   221  01F7  3406               	retlw	6
   222  01F8  345B               	retlw	91
   223  01F9  344F               	retlw	79
   224  01FA  3466               	retlw	102
   225  01FB  346D               	retlw	109
   226  01FC  347D               	retlw	125
   227  01FD  3407               	retlw	7
   228  01FE  347F               	retlw	127
   229  01FF  346F               	retlw	111
   230  0200  3477               	retlw	119
   231  0201  347C               	retlw	124
   232  0202  3439               	retlw	57
   233  0203  345E               	retlw	94
   234  0204  3479               	retlw	121
   235  0205  3471               	retlw	113
   236                           
   237                           	psect	nvCOMMON
   238  0076                     __pnvCOMMON:
   239  0076                     _residuo:
   240  0076                     	ds	1
   241  0077                     _contador:
   242  0077                     	ds	1
   243  0078                     _unidades:
   244  0078                     	ds	1
   245                           
   246                           	psect	nvBANK0
   247  003B                     __pnvBANK0:
   248  003B                     _centenas:
   249  003B                     	ds	1
   250  003C                     _decenas:
   251  003C                     	ds	1
   252  0001                     _TMR0	set	1
   253  0008                     _PORTD	set	8
   254  0009                     _PORTEbits	set	9
   255  0009                     _PORTE	set	9
   256  0007                     _PORTC	set	7
   257  0006                     _PORTBbits	set	6
   258  000B                     _INTCONbits	set	11
   259  005A                     _T0IF	set	90
   260  0096                     _IOCBbits	set	150
   261  0095                     _WPUBbits	set	149
   262  0081                     _OPTION_REGbits	set	129
   263  008F                     _OSCCONbits	set	143
   264  0086                     _TRISBbits	set	134
   265  0089                     _TRISE	set	137
   266  0088                     _TRISD	set	136
   267  0087                     _TRISC	set	135
   268  0189                     _ANSELH	set	393
   269  0188                     _ANSEL	set	392
   270                           
   271                           	psect	cinit
   272  0011                     start_initialization:	
   273                           ; #config settings
   274                           
   275  0011                     __initialization:
   276                           
   277                           ; Initialize objects allocated to BANK0
   278  0011  1383               	bcf	3,7	;select IRP bank0
   279  0012  3030               	movlw	low (__pdataBANK0+16)
   280  0013  00FD               	movwf	btemp+-1
   281  0014  3001               	movlw	high __pidataBANK0
   282  0015  00FE               	movwf	btemp
   283  0016  30F6               	movlw	low __pidataBANK0
   284  0017  00FF               	movwf	btemp+1
   285  0018  3020               	movlw	low __pdataBANK0
   286  0019  0084               	movwf	4
   287  001A  120A  118A  21E7  120A  118A  	fcall	init_ram0
   288                           
   289                           ; Clear objects allocated to COMMON
   290  001F  01F9               	clrf	__pbssCOMMON& (0+127)
   291  0020                     end_of_initialization:	
   292                           ;End of C runtime variable initialization code
   293                           
   294  0020                     __end_of__initialization:
   295  0020  0183               	clrf	3
   296  0021  120A  118A  29CF   	ljmp	_main	;jump to C main() function
   297                           
   298                           	psect	bssCOMMON
   299  0079                     __pbssCOMMON:
   300  0079                     _banderas:
   301  0079                     	ds	1
   302                           
   303                           	psect	dataBANK0
   304  0020                     __pdataBANK0:
   305  0020                     _display:
   306  0020                     	ds	16
   307                           
   308                           	psect	inittext
   309  01E3                     init_fetch0:	
   310                           ;	Called with low address in FSR and high address in W
   311                           
   312  01E3  087E               	movf	btemp,w
   313  01E4  008A               	movwf	10
   314  01E5  087F               	movf	btemp+1,w
   315  01E6  0082               	movwf	2
   316  01E7                     init_ram0:	
   317                           ;Called with:
   318                           ;	high address of idata address in btemp 
   319                           ;	low address of idata address in btemp+1 
   320                           ;	low address of data in FSR
   321                           ;	high address + 1 of data in btemp-1
   322                           
   323  01E7  120A  118A  21E3  120A  118A  	fcall	init_fetch0
   324  01EC  0080               	movwf	0
   325  01ED  0A84               	incf	4,f
   326  01EE  0804               	movf	4,w
   327  01EF  067D               	xorwf	btemp+-1,w
   328  01F0  1903               	btfsc	3,2
   329  01F1  3400               	retlw	0
   330  01F2  0AFF               	incf	btemp+1,f
   331  01F3  1903               	btfsc	3,2
   332  01F4  0AFE               	incf	btemp,f
   333  01F5  29E7               	goto	init_ram0
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_setup:
   338  0070                     ?_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_divisiones:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 2 bytes @ 0x0
   352  0070                     	ds	4
   353  0074                     ??_setup:
   354  0074                     ??___awdiv:	
   355                           ; 1 bytes @ 0x4
   356                           
   357  0074                     ??___awmod:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 1 bytes @ 0x4
   362  0074                     	ds	1
   363  0075                     ??_main:
   364                           
   365                           ; 1 bytes @ 0x5
   366  0075                     	ds	1
   367                           
   368                           	psect	cstackBANK0
   369  0030                     __pcstackBANK0:
   370  0030                     ?___awdiv:
   371  0030                     ?___awmod:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  0030                     ___awdiv@divisor:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0030                     ___awmod@divisor:	
   378                           ; 2 bytes @ 0x0
   379                           
   380                           
   381                           ; 2 bytes @ 0x0
   382  0030                     	ds	2
   383  0032                     ___awdiv@dividend:
   384  0032                     ___awmod@dividend:	
   385                           ; 2 bytes @ 0x2
   386                           
   387                           
   388                           ; 2 bytes @ 0x2
   389  0032                     	ds	2
   390  0034                     ___awdiv@counter:
   391  0034                     ___awmod@counter:	
   392                           ; 1 bytes @ 0x4
   393                           
   394                           
   395                           ; 1 bytes @ 0x4
   396  0034                     	ds	1
   397  0035                     ___awdiv@sign:
   398  0035                     ___awmod@sign:	
   399                           ; 1 bytes @ 0x5
   400                           
   401                           
   402                           ; 1 bytes @ 0x5
   403  0035                     	ds	1
   404  0036                     ___awdiv@quotient:
   405                           
   406                           ; 2 bytes @ 0x6
   407  0036                     	ds	2
   408  0038                     ??_divisiones:
   409                           
   410                           ; 1 bytes @ 0x8
   411  0038                     	ds	3
   412                           
   413                           	psect	maintext
   414  01CF                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 114 in file "Prelab7.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          1       0       0       0       0
   437 ;;      Totals:         1       0       0       0       0
   438 ;;Total ram usage:        1 bytes
   439 ;; Hardware stack levels required when called: 3
   440 ;; This function calls:
   441 ;;		_divisiones
   442 ;;		_setup
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448  01CF                     _main:	
   449                           ;psect for function _main
   450                           
   451  01CF                     l1074:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;Prelab7.c: 115:     setup();
   457  01CF  120A  118A  219C  120A  118A  	fcall	_setup
   458  01D4                     l73:	
   459                           ;Prelab7.c: 116:     while(1){
   460                           
   461                           
   462                           ;Prelab7.c: 117:         divisiones();
   463  01D4  120A  118A  208D  120A  118A  	fcall	_divisiones
   464  01D9                     l1076:
   465                           
   466                           ;Prelab7.c: 118:         contador = PORTC;
   467  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   468  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   469  01DB  0807               	movf	7,w	;volatile
   470  01DC  00F5               	movwf	??_main
   471  01DD  0875               	movf	??_main,w
   472  01DE  00F7               	movwf	_contador
   473  01DF  29D4               	goto	l73
   474  01E0  120A  118A  280E   	ljmp	start
   475  01E3                     __end_of_main:
   476                           
   477                           	psect	text1
   478  019C                     __ptext1:	
   479 ;; *************** function _setup *****************
   480 ;; Defined at:
   481 ;;		line 126 in file "Prelab7.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509  019C                     _setup:	
   510                           ;psect for function _setup
   511                           
   512  019C                     l756:	
   513                           ;incstack = 0
   514                           ; Regs used in _setup: [wreg+status,2]
   515                           
   516                           
   517                           ;Prelab7.c: 128:     ANSEL = 0;
   518  019C  1683               	bsf	3,5	;RP0=1, select bank3
   519  019D  1703               	bsf	3,6	;RP1=1, select bank3
   520  019E  0188               	clrf	8	;volatile
   521                           
   522                           ;Prelab7.c: 129:     ANSELH = 0b00000000;
   523  019F  0189               	clrf	9	;volatile
   524                           
   525                           ;Prelab7.c: 131:     TRISC = 0b00000000;
   526  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   527  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   528  01A2  0187               	clrf	7	;volatile
   529                           
   530                           ;Prelab7.c: 132:     PORTC = 0;
   531  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   532  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   533  01A5  0187               	clrf	7	;volatile
   534                           
   535                           ;Prelab7.c: 133:     TRISD = 0b00000000;
   536  01A6  1683               	bsf	3,5	;RP0=1, select bank1
   537  01A7  1303               	bcf	3,6	;RP1=0, select bank1
   538  01A8  0188               	clrf	8	;volatile
   539                           
   540                           ;Prelab7.c: 134:     PORTD = 0;
   541  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   542  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   543  01AB  0188               	clrf	8	;volatile
   544                           
   545                           ;Prelab7.c: 135:     TRISE = 0b00000000;
   546  01AC  1683               	bsf	3,5	;RP0=1, select bank1
   547  01AD  1303               	bcf	3,6	;RP1=0, select bank1
   548  01AE  0189               	clrf	9	;volatile
   549                           
   550                           ;Prelab7.c: 136:     PORTE = 0;
   551  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   552  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   553  01B1  0189               	clrf	9	;volatile
   554  01B2                     l758:
   555                           
   556                           ;Prelab7.c: 138:     TRISBbits.TRISB0 = 1;
   557  01B2  1683               	bsf	3,5	;RP0=1, select bank1
   558  01B3  1303               	bcf	3,6	;RP1=0, select bank1
   559  01B4  1406               	bsf	6,0	;volatile
   560  01B5                     l760:
   561                           
   562                           ;Prelab7.c: 139:     TRISBbits.TRISB1 = 1;
   563  01B5  1486               	bsf	6,1	;volatile
   564  01B6                     l762:
   565                           
   566                           ;Prelab7.c: 141:     OSCCONbits.IRCF2 = 1;
   567  01B6  170F               	bsf	15,6	;volatile
   568  01B7                     l764:
   569                           
   570                           ;Prelab7.c: 142:     OSCCONbits.IRCF1 = 1;
   571  01B7  168F               	bsf	15,5	;volatile
   572  01B8                     l766:
   573                           
   574                           ;Prelab7.c: 143:     OSCCONbits.IRCF0 = 1;
   575  01B8  160F               	bsf	15,4	;volatile
   576  01B9                     l768:
   577                           
   578                           ;Prelab7.c: 144:     OSCCONbits.SCS = 1;
   579  01B9  140F               	bsf	15,0	;volatile
   580  01BA                     l770:
   581                           
   582                           ;Prelab7.c: 146:     OPTION_REGbits.nRBPU = 0;
   583  01BA  1381               	bcf	1,7	;volatile
   584  01BB                     l772:
   585                           
   586                           ;Prelab7.c: 147:     WPUBbits.WPUB0 = 1;
   587  01BB  1415               	bsf	21,0	;volatile
   588  01BC                     l774:
   589                           
   590                           ;Prelab7.c: 148:     WPUBbits.WPUB1 = 1;
   591  01BC  1495               	bsf	21,1	;volatile
   592  01BD                     l776:
   593                           
   594                           ;Prelab7.c: 151:     INTCONbits.GIE = 1;
   595  01BD  178B               	bsf	11,7	;volatile
   596  01BE                     l778:
   597                           
   598                           ;Prelab7.c: 152:     INTCONbits.T0IE = 1;
   599  01BE  168B               	bsf	11,5	;volatile
   600  01BF                     l780:
   601                           
   602                           ;Prelab7.c: 153:     INTCONbits.RBIE = 1;
   603  01BF  158B               	bsf	11,3	;volatile
   604  01C0                     l782:
   605                           
   606                           ;Prelab7.c: 154:     IOCBbits.IOCB0 = 1;
   607  01C0  1416               	bsf	22,0	;volatile
   608  01C1                     l784:
   609                           
   610                           ;Prelab7.c: 155:     IOCBbits.IOCB1 = 1;
   611  01C1  1496               	bsf	22,1	;volatile
   612  01C2                     l786:
   613                           
   614                           ;Prelab7.c: 156:     INTCONbits.RBIF = 0;
   615  01C2  100B               	bcf	11,0	;volatile
   616  01C3                     l788:
   617                           
   618                           ;Prelab7.c: 157:     INTCONbits.T0IF = 0;
   619  01C3  110B               	bcf	11,2	;volatile
   620  01C4                     l790:
   621                           
   622                           ;Prelab7.c: 159:     OPTION_REGbits.PSA = 0;
   623  01C4  1181               	bcf	1,3	;volatile
   624  01C5                     l792:
   625                           
   626                           ;Prelab7.c: 160:     OPTION_REGbits.T0CS = 0;
   627  01C5  1281               	bcf	1,5	;volatile
   628  01C6                     l794:
   629                           
   630                           ;Prelab7.c: 161:     OPTION_REGbits.PS2 = 1;
   631  01C6  1501               	bsf	1,2	;volatile
   632  01C7                     l796:
   633                           
   634                           ;Prelab7.c: 162:     OPTION_REGbits.PS1 = 1;
   635  01C7  1481               	bsf	1,1	;volatile
   636  01C8                     l798:
   637                           
   638                           ;Prelab7.c: 163:     OPTION_REGbits.PS0 = 1;
   639  01C8  1401               	bsf	1,0	;volatile
   640  01C9                     l800:
   641                           
   642                           ;Prelab7.c: 165:     TMR0= 217;
   643  01C9  30D9               	movlw	217
   644  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   645  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   646  01CC  0081               	movwf	1	;volatile
   647  01CD                     l802:
   648                           
   649                           ;Prelab7.c: 167:     banderas = 0b00000000;
   650  01CD  01F9               	clrf	_banderas
   651  01CE                     l79:
   652  01CE  0008               	return
   653  01CF                     __end_of_setup:
   654                           
   655                           	psect	text2
   656  008D                     __ptext2:	
   657 ;; *************** function _divisiones *****************
   658 ;; Defined at:
   659 ;;		line 173 in file "Prelab7.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  2   20[None  ] int 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          0       3       0       0       0
   676 ;;      Totals:         0       3       0       0       0
   677 ;;Total ram usage:        3 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 2
   680 ;; This function calls:
   681 ;;		___awdiv
   682 ;;		___awmod
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688  008D                     _divisiones:	
   689                           ;psect for function _divisiones
   690                           
   691  008D                     l1072:	
   692                           ;incstack = 0
   693                           ; Regs used in _divisiones: [wreg+status,2+status,0+pclath+cstack]
   694                           
   695                           
   696                           ;Prelab7.c: 174:     centenas = contador/100;
   697  008D  3064               	movlw	100
   698  008E  1283               	bcf	3,5	;RP0=0, select bank0
   699  008F  1303               	bcf	3,6	;RP1=0, select bank0
   700  0090  00B0               	movwf	___awdiv@divisor
   701  0091  3000               	movlw	0
   702  0092  00B1               	movwf	___awdiv@divisor+1
   703  0093  0877               	movf	_contador,w
   704  0094  00B8               	movwf	??_divisiones
   705  0095  01B9               	clrf	??_divisiones+1
   706  0096  0838               	movf	??_divisiones,w
   707  0097  00B2               	movwf	___awdiv@dividend
   708  0098  0839               	movf	??_divisiones+1,w
   709  0099  00B3               	movwf	___awdiv@dividend+1
   710  009A  120A  118A  2024  120A  118A  	fcall	___awdiv
   711  009F  1283               	bcf	3,5	;RP0=0, select bank0
   712  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   713  00A1  0830               	movf	?___awdiv,w
   714  00A2  00BA               	movwf	??_divisiones+2
   715  00A3  083A               	movf	??_divisiones+2,w
   716  00A4  00BB               	movwf	_centenas
   717                           
   718                           ;Prelab7.c: 175:     residuo = contador%100;
   719  00A5  3064               	movlw	100
   720  00A6  00B0               	movwf	___awmod@divisor
   721  00A7  3000               	movlw	0
   722  00A8  00B1               	movwf	___awmod@divisor+1
   723  00A9  0877               	movf	_contador,w
   724  00AA  00B8               	movwf	??_divisiones
   725  00AB  01B9               	clrf	??_divisiones+1
   726  00AC  0838               	movf	??_divisiones,w
   727  00AD  00B2               	movwf	___awmod@dividend
   728  00AE  0839               	movf	??_divisiones+1,w
   729  00AF  00B3               	movwf	___awmod@dividend+1
   730  00B0  120A  118A  20E8  120A  118A  	fcall	___awmod
   731  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   732  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   733  00B7  0830               	movf	?___awmod,w
   734  00B8  00BA               	movwf	??_divisiones+2
   735  00B9  083A               	movf	??_divisiones+2,w
   736  00BA  00F6               	movwf	_residuo
   737                           
   738                           ;Prelab7.c: 177:     decenas = residuo/10;
   739  00BB  300A               	movlw	10
   740  00BC  00B0               	movwf	___awdiv@divisor
   741  00BD  3000               	movlw	0
   742  00BE  00B1               	movwf	___awdiv@divisor+1
   743  00BF  0876               	movf	_residuo,w
   744  00C0  00B8               	movwf	??_divisiones
   745  00C1  01B9               	clrf	??_divisiones+1
   746  00C2  0838               	movf	??_divisiones,w
   747  00C3  00B2               	movwf	___awdiv@dividend
   748  00C4  0839               	movf	??_divisiones+1,w
   749  00C5  00B3               	movwf	___awdiv@dividend+1
   750  00C6  120A  118A  2024  120A  118A  	fcall	___awdiv
   751  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   752  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   753  00CD  0830               	movf	?___awdiv,w
   754  00CE  00BA               	movwf	??_divisiones+2
   755  00CF  083A               	movf	??_divisiones+2,w
   756  00D0  00BC               	movwf	_decenas
   757                           
   758                           ;Prelab7.c: 178:     unidades = residuo%10;
   759  00D1  300A               	movlw	10
   760  00D2  00B0               	movwf	___awmod@divisor
   761  00D3  3000               	movlw	0
   762  00D4  00B1               	movwf	___awmod@divisor+1
   763  00D5  0876               	movf	_residuo,w
   764  00D6  00B8               	movwf	??_divisiones
   765  00D7  01B9               	clrf	??_divisiones+1
   766  00D8  0838               	movf	??_divisiones,w
   767  00D9  00B2               	movwf	___awmod@dividend
   768  00DA  0839               	movf	??_divisiones+1,w
   769  00DB  00B3               	movwf	___awmod@dividend+1
   770  00DC  120A  118A  20E8  120A  118A  	fcall	___awmod
   771  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   772  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   773  00E3  0830               	movf	?___awmod,w
   774  00E4  00BA               	movwf	??_divisiones+2
   775  00E5  083A               	movf	??_divisiones+2,w
   776  00E6  00F8               	movwf	_unidades
   777  00E7                     l82:
   778  00E7  0008               	return
   779  00E8                     __end_of_divisiones:
   780                           
   781                           	psect	text3
   782  00E8                     __ptext3:	
   783 ;; *************** function ___awmod *****************
   784 ;; Defined at:
   785 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  divisor         2    0[BANK0 ] int 
   788 ;;  dividend        2    2[BANK0 ] int 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  sign            1    5[BANK0 ] unsigned char 
   791 ;;  counter         1    4[BANK0 ] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  2    0[BANK0 ] int 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       4       0       0       0
   802 ;;      Locals:         0       2       0       0       0
   803 ;;      Temps:          1       0       0       0       0
   804 ;;      Totals:         1       6       0       0       0
   805 ;;Total ram usage:        7 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_divisiones
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815  00E8                     ___awmod:	
   816                           ;psect for function ___awmod
   817                           
   818  00E8                     l1034:	
   819                           ;incstack = 0
   820                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   821                           
   822  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   823  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   824  00EA  01B5               	clrf	___awmod@sign
   825  00EB                     l1036:
   826  00EB  1FB3               	btfss	___awmod@dividend+1,7
   827  00EC  28EE               	goto	u631
   828  00ED  28EF               	goto	u630
   829  00EE                     u631:
   830  00EE  28F6               	goto	l1042
   831  00EF                     u630:
   832  00EF                     l1038:
   833  00EF  09B2               	comf	___awmod@dividend,f
   834  00F0  09B3               	comf	___awmod@dividend+1,f
   835  00F1  0AB2               	incf	___awmod@dividend,f
   836  00F2  1903               	skipnz
   837  00F3  0AB3               	incf	___awmod@dividend+1,f
   838  00F4                     l1040:
   839  00F4  01B5               	clrf	___awmod@sign
   840  00F5  0AB5               	incf	___awmod@sign,f
   841  00F6                     l1042:
   842  00F6  1FB1               	btfss	___awmod@divisor+1,7
   843  00F7  28F9               	goto	u641
   844  00F8  28FA               	goto	u640
   845  00F9                     u641:
   846  00F9  28FF               	goto	l1046
   847  00FA                     u640:
   848  00FA                     l1044:
   849  00FA  09B0               	comf	___awmod@divisor,f
   850  00FB  09B1               	comf	___awmod@divisor+1,f
   851  00FC  0AB0               	incf	___awmod@divisor,f
   852  00FD  1903               	skipnz
   853  00FE  0AB1               	incf	___awmod@divisor+1,f
   854  00FF                     l1046:
   855  00FF  0830               	movf	___awmod@divisor,w
   856  0100  0431               	iorwf	___awmod@divisor+1,w
   857  0101  1903               	btfsc	3,2
   858  0102  2904               	goto	u651
   859  0103  2905               	goto	u650
   860  0104                     u651:
   861  0104  2934               	goto	l1064
   862  0105                     u650:
   863  0105                     l1048:
   864  0105  01B4               	clrf	___awmod@counter
   865  0106  0AB4               	incf	___awmod@counter,f
   866  0107  2913               	goto	l1054
   867  0108                     l1050:
   868  0108  3001               	movlw	1
   869  0109                     u665:
   870  0109  1003               	clrc
   871  010A  0DB0               	rlf	___awmod@divisor,f
   872  010B  0DB1               	rlf	___awmod@divisor+1,f
   873  010C  3EFF               	addlw	-1
   874  010D  1D03               	skipz
   875  010E  2909               	goto	u665
   876  010F                     l1052:
   877  010F  3001               	movlw	1
   878  0110  00F4               	movwf	??___awmod
   879  0111  0874               	movf	??___awmod,w
   880  0112  07B4               	addwf	___awmod@counter,f
   881  0113                     l1054:
   882  0113  1FB1               	btfss	___awmod@divisor+1,7
   883  0114  2916               	goto	u671
   884  0115  2917               	goto	u670
   885  0116                     u671:
   886  0116  2908               	goto	l1050
   887  0117                     u670:
   888  0117                     l1056:
   889  0117  0831               	movf	___awmod@divisor+1,w
   890  0118  0233               	subwf	___awmod@dividend+1,w
   891  0119  1D03               	skipz
   892  011A  291D               	goto	u685
   893  011B  0830               	movf	___awmod@divisor,w
   894  011C  0232               	subwf	___awmod@dividend,w
   895  011D                     u685:
   896  011D  1C03               	skipc
   897  011E  2920               	goto	u681
   898  011F  2921               	goto	u680
   899  0120                     u681:
   900  0120  2927               	goto	l1060
   901  0121                     u680:
   902  0121                     l1058:
   903  0121  0830               	movf	___awmod@divisor,w
   904  0122  02B2               	subwf	___awmod@dividend,f
   905  0123  0831               	movf	___awmod@divisor+1,w
   906  0124  1C03               	skipc
   907  0125  03B3               	decf	___awmod@dividend+1,f
   908  0126  02B3               	subwf	___awmod@dividend+1,f
   909  0127                     l1060:
   910  0127  3001               	movlw	1
   911  0128                     u695:
   912  0128  1003               	clrc
   913  0129  0CB1               	rrf	___awmod@divisor+1,f
   914  012A  0CB0               	rrf	___awmod@divisor,f
   915  012B  3EFF               	addlw	-1
   916  012C  1D03               	skipz
   917  012D  2928               	goto	u695
   918  012E                     l1062:
   919  012E  3001               	movlw	1
   920  012F  02B4               	subwf	___awmod@counter,f
   921  0130  1D03               	btfss	3,2
   922  0131  2933               	goto	u701
   923  0132  2934               	goto	u700
   924  0133                     u701:
   925  0133  2917               	goto	l1056
   926  0134                     u700:
   927  0134                     l1064:
   928  0134  0835               	movf	___awmod@sign,w
   929  0135  1903               	btfsc	3,2
   930  0136  2938               	goto	u711
   931  0137  2939               	goto	u710
   932  0138                     u711:
   933  0138  293E               	goto	l1068
   934  0139                     u710:
   935  0139                     l1066:
   936  0139  09B2               	comf	___awmod@dividend,f
   937  013A  09B3               	comf	___awmod@dividend+1,f
   938  013B  0AB2               	incf	___awmod@dividend,f
   939  013C  1903               	skipnz
   940  013D  0AB3               	incf	___awmod@dividend+1,f
   941  013E                     l1068:
   942  013E  0833               	movf	___awmod@dividend+1,w
   943  013F  00B1               	movwf	?___awmod+1
   944  0140  0832               	movf	___awmod@dividend,w
   945  0141  00B0               	movwf	?___awmod
   946  0142                     l334:
   947  0142  0008               	return
   948  0143                     __end_of___awmod:
   949                           
   950                           	psect	text4
   951  0024                     __ptext4:	
   952 ;; *************** function ___awdiv *****************
   953 ;; Defined at:
   954 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  divisor         2    0[BANK0 ] int 
   957 ;;  dividend        2    2[BANK0 ] int 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  quotient        2    6[BANK0 ] int 
   960 ;;  sign            1    5[BANK0 ] unsigned char 
   961 ;;  counter         1    4[BANK0 ] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2    0[BANK0 ] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       4       0       0       0
   972 ;;      Locals:         0       4       0       0       0
   973 ;;      Temps:          1       0       0       0       0
   974 ;;      Totals:         1       8       0       0       0
   975 ;;Total ram usage:        9 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_divisiones
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985  0024                     ___awdiv:	
   986                           ;psect for function ___awdiv
   987                           
   988  0024                     l990:	
   989                           ;incstack = 0
   990                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   991                           
   992  0024  1283               	bcf	3,5	;RP0=0, select bank0
   993  0025  1303               	bcf	3,6	;RP1=0, select bank0
   994  0026  01B5               	clrf	___awdiv@sign
   995  0027                     l992:
   996  0027  1FB1               	btfss	___awdiv@divisor+1,7
   997  0028  282A               	goto	u531
   998  0029  282B               	goto	u530
   999  002A                     u531:
  1000  002A  2832               	goto	l998
  1001  002B                     u530:
  1002  002B                     l994:
  1003  002B  09B0               	comf	___awdiv@divisor,f
  1004  002C  09B1               	comf	___awdiv@divisor+1,f
  1005  002D  0AB0               	incf	___awdiv@divisor,f
  1006  002E  1903               	skipnz
  1007  002F  0AB1               	incf	___awdiv@divisor+1,f
  1008  0030                     l996:
  1009  0030  01B5               	clrf	___awdiv@sign
  1010  0031  0AB5               	incf	___awdiv@sign,f
  1011  0032                     l998:
  1012  0032  1FB3               	btfss	___awdiv@dividend+1,7
  1013  0033  2835               	goto	u541
  1014  0034  2836               	goto	u540
  1015  0035                     u541:
  1016  0035  283F               	goto	l1004
  1017  0036                     u540:
  1018  0036                     l1000:
  1019  0036  09B2               	comf	___awdiv@dividend,f
  1020  0037  09B3               	comf	___awdiv@dividend+1,f
  1021  0038  0AB2               	incf	___awdiv@dividend,f
  1022  0039  1903               	skipnz
  1023  003A  0AB3               	incf	___awdiv@dividend+1,f
  1024  003B                     l1002:
  1025  003B  3001               	movlw	1
  1026  003C  00F4               	movwf	??___awdiv
  1027  003D  0874               	movf	??___awdiv,w
  1028  003E  06B5               	xorwf	___awdiv@sign,f
  1029  003F                     l1004:
  1030  003F  01B6               	clrf	___awdiv@quotient
  1031  0040  01B7               	clrf	___awdiv@quotient+1
  1032  0041                     l1006:
  1033  0041  0830               	movf	___awdiv@divisor,w
  1034  0042  0431               	iorwf	___awdiv@divisor+1,w
  1035  0043  1903               	btfsc	3,2
  1036  0044  2846               	goto	u551
  1037  0045  2847               	goto	u550
  1038  0046                     u551:
  1039  0046  287E               	goto	l1026
  1040  0047                     u550:
  1041  0047                     l1008:
  1042  0047  01B4               	clrf	___awdiv@counter
  1043  0048  0AB4               	incf	___awdiv@counter,f
  1044  0049  2855               	goto	l1014
  1045  004A                     l1010:
  1046  004A  3001               	movlw	1
  1047  004B                     u565:
  1048  004B  1003               	clrc
  1049  004C  0DB0               	rlf	___awdiv@divisor,f
  1050  004D  0DB1               	rlf	___awdiv@divisor+1,f
  1051  004E  3EFF               	addlw	-1
  1052  004F  1D03               	skipz
  1053  0050  284B               	goto	u565
  1054  0051                     l1012:
  1055  0051  3001               	movlw	1
  1056  0052  00F4               	movwf	??___awdiv
  1057  0053  0874               	movf	??___awdiv,w
  1058  0054  07B4               	addwf	___awdiv@counter,f
  1059  0055                     l1014:
  1060  0055  1FB1               	btfss	___awdiv@divisor+1,7
  1061  0056  2858               	goto	u571
  1062  0057  2859               	goto	u570
  1063  0058                     u571:
  1064  0058  284A               	goto	l1010
  1065  0059                     u570:
  1066  0059                     l1016:
  1067  0059  3001               	movlw	1
  1068  005A                     u585:
  1069  005A  1003               	clrc
  1070  005B  0DB6               	rlf	___awdiv@quotient,f
  1071  005C  0DB7               	rlf	___awdiv@quotient+1,f
  1072  005D  3EFF               	addlw	-1
  1073  005E  1D03               	skipz
  1074  005F  285A               	goto	u585
  1075  0060  0831               	movf	___awdiv@divisor+1,w
  1076  0061  0233               	subwf	___awdiv@dividend+1,w
  1077  0062  1D03               	skipz
  1078  0063  2866               	goto	u595
  1079  0064  0830               	movf	___awdiv@divisor,w
  1080  0065  0232               	subwf	___awdiv@dividend,w
  1081  0066                     u595:
  1082  0066  1C03               	skipc
  1083  0067  2869               	goto	u591
  1084  0068  286A               	goto	u590
  1085  0069                     u591:
  1086  0069  2871               	goto	l1022
  1087  006A                     u590:
  1088  006A                     l1018:
  1089  006A  0830               	movf	___awdiv@divisor,w
  1090  006B  02B2               	subwf	___awdiv@dividend,f
  1091  006C  0831               	movf	___awdiv@divisor+1,w
  1092  006D  1C03               	skipc
  1093  006E  03B3               	decf	___awdiv@dividend+1,f
  1094  006F  02B3               	subwf	___awdiv@dividend+1,f
  1095  0070                     l1020:
  1096  0070  1436               	bsf	___awdiv@quotient,0
  1097  0071                     l1022:
  1098  0071  3001               	movlw	1
  1099  0072                     u605:
  1100  0072  1003               	clrc
  1101  0073  0CB1               	rrf	___awdiv@divisor+1,f
  1102  0074  0CB0               	rrf	___awdiv@divisor,f
  1103  0075  3EFF               	addlw	-1
  1104  0076  1D03               	skipz
  1105  0077  2872               	goto	u605
  1106  0078                     l1024:
  1107  0078  3001               	movlw	1
  1108  0079  02B4               	subwf	___awdiv@counter,f
  1109  007A  1D03               	btfss	3,2
  1110  007B  287D               	goto	u611
  1111  007C  287E               	goto	u610
  1112  007D                     u611:
  1113  007D  2859               	goto	l1016
  1114  007E                     u610:
  1115  007E                     l1026:
  1116  007E  0835               	movf	___awdiv@sign,w
  1117  007F  1903               	btfsc	3,2
  1118  0080  2882               	goto	u621
  1119  0081  2883               	goto	u620
  1120  0082                     u621:
  1121  0082  2888               	goto	l1030
  1122  0083                     u620:
  1123  0083                     l1028:
  1124  0083  09B6               	comf	___awdiv@quotient,f
  1125  0084  09B7               	comf	___awdiv@quotient+1,f
  1126  0085  0AB6               	incf	___awdiv@quotient,f
  1127  0086  1903               	skipnz
  1128  0087  0AB7               	incf	___awdiv@quotient+1,f
  1129  0088                     l1030:
  1130  0088  0837               	movf	___awdiv@quotient+1,w
  1131  0089  00B1               	movwf	?___awdiv+1
  1132  008A  0836               	movf	___awdiv@quotient,w
  1133  008B  00B0               	movwf	?___awdiv
  1134  008C                     l321:
  1135  008C  0008               	return
  1136  008D                     __end_of___awdiv:
  1137                           
  1138                           	psect	text5
  1139  0143                     __ptext5:	
  1140 ;; *************** function _isr *****************
  1141 ;; Defined at:
  1142 ;;		line 68 in file "Prelab7.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0
  1158 ;;      Temps:          4       0       0       0       0
  1159 ;;      Totals:         4       0       0       0       0
  1160 ;;Total ram usage:        4 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		Interrupt level 1
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169  0143                     _isr:	
  1170                           ;psect for function _isr
  1171                           
  1172  0143                     i1l940:
  1173                           
  1174                           ;Prelab7.c: 70:     if(INTCONbits.RBIF){
  1175  0143  1C0B               	btfss	11,0	;volatile
  1176  0144  2946               	goto	u46_21
  1177  0145  2947               	goto	u46_20
  1178  0146                     u46_21:
  1179  0146  2958               	goto	i1l952
  1180  0147                     u46_20:
  1181  0147                     i1l942:
  1182                           
  1183                           ;Prelab7.c: 72:         if(!PORTBbits.RB1){
  1184  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0149  1886               	btfsc	6,1	;volatile
  1187  014A  294C               	goto	u47_21
  1188  014B  294D               	goto	u47_20
  1189  014C                     u47_21:
  1190  014C  2951               	goto	i1l946
  1191  014D                     u47_20:
  1192  014D                     i1l944:
  1193                           
  1194                           ;Prelab7.c: 73:             PORTC++;
  1195  014D  3001               	movlw	1
  1196  014E  00F0               	movwf	??_isr
  1197  014F  0870               	movf	??_isr,w
  1198  0150  0787               	addwf	7,f	;volatile
  1199  0151                     i1l946:
  1200                           
  1201                           ;Prelab7.c: 75:         if (!PORTBbits.RB0){
  1202  0151  1806               	btfsc	6,0	;volatile
  1203  0152  2954               	goto	u48_21
  1204  0153  2955               	goto	u48_20
  1205  0154                     u48_21:
  1206  0154  2957               	goto	i1l950
  1207  0155                     u48_20:
  1208  0155                     i1l948:
  1209                           
  1210                           ;Prelab7.c: 76:             PORTC--;
  1211  0155  3001               	movlw	1
  1212  0156  0287               	subwf	7,f	;volatile
  1213  0157                     i1l950:
  1214                           
  1215                           ;Prelab7.c: 78:         INTCONbits.RBIF = 0;
  1216  0157  100B               	bcf	11,0	;volatile
  1217  0158                     i1l952:
  1218                           
  1219                           ;Prelab7.c: 80:     if(T0IF == 1){
  1220  0158  1D0B               	btfss	11,2	;volatile
  1221  0159  295B               	goto	u49_21
  1222  015A  295C               	goto	u49_20
  1223  015B                     u49_21:
  1224  015B  2993               	goto	i1l68
  1225  015C                     u49_20:
  1226  015C                     i1l954:
  1227                           
  1228                           ;Prelab7.c: 81:         PORTE=0X00;
  1229  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1230  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1231  015E  0189               	clrf	9	;volatile
  1232  015F                     i1l956:
  1233                           
  1234                           ;Prelab7.c: 84:         if (banderas == 0b00000000){
  1235  015F  0879               	movf	_banderas,w
  1236  0160  1D03               	btfss	3,2
  1237  0161  2963               	goto	u50_21
  1238  0162  2964               	goto	u50_20
  1239  0163                     u50_21:
  1240  0163  296F               	goto	i1l964
  1241  0164                     u50_20:
  1242  0164                     i1l958:
  1243                           
  1244                           ;Prelab7.c: 85:             PORTEbits.RE2 = 0;
  1245  0164  1109               	bcf	9,2	;volatile
  1246                           
  1247                           ;Prelab7.c: 86:             PORTEbits.RE0 = 1;
  1248  0165  1409               	bsf	9,0	;volatile
  1249  0166                     i1l960:
  1250                           
  1251                           ;Prelab7.c: 87:             PORTD = display[unidades];
  1252  0166  0878               	movf	_unidades,w
  1253  0167  3E20               	addlw	(low (_display| 0))& (0+255)
  1254  0168  0084               	movwf	4
  1255  0169  1383               	bcf	3,7	;select IRP bank0
  1256  016A  0800               	movf	0,w
  1257  016B  0088               	movwf	8	;volatile
  1258  016C                     i1l962:
  1259                           
  1260                           ;Prelab7.c: 88:             banderas = 0b00000001;
  1261  016C  01F9               	clrf	_banderas
  1262  016D  0AF9               	incf	_banderas,f
  1263                           
  1264                           ;Prelab7.c: 89:         }
  1265  016E  2990               	goto	i1l980
  1266  016F                     i1l964:
  1267  016F  0379               	decf	_banderas,w
  1268  0170  1D03               	btfss	3,2
  1269  0171  2973               	goto	u51_21
  1270  0172  2974               	goto	u51_20
  1271  0173                     u51_21:
  1272  0173  2981               	goto	i1l972
  1273  0174                     u51_20:
  1274  0174                     i1l966:
  1275                           
  1276                           ;Prelab7.c: 92:             PORTEbits.RE0 = 0;
  1277  0174  1009               	bcf	9,0	;volatile
  1278                           
  1279                           ;Prelab7.c: 93:             PORTEbits.RE1 = 1;
  1280  0175  1489               	bsf	9,1	;volatile
  1281  0176                     i1l968:
  1282                           
  1283                           ;Prelab7.c: 94:             PORTD = display[decenas];
  1284  0176  083C               	movf	_decenas,w
  1285  0177  3E20               	addlw	(low (_display| 0))& (0+255)
  1286  0178  0084               	movwf	4
  1287  0179  1383               	bcf	3,7	;select IRP bank0
  1288  017A  0800               	movf	0,w
  1289  017B  0088               	movwf	8	;volatile
  1290  017C                     i1l970:
  1291                           
  1292                           ;Prelab7.c: 95:             banderas = 0b00000010;
  1293  017C  3002               	movlw	2
  1294  017D  00F0               	movwf	??_isr
  1295  017E  0870               	movf	??_isr,w
  1296  017F  00F9               	movwf	_banderas
  1297                           
  1298                           ;Prelab7.c: 96:         }
  1299  0180  2990               	goto	i1l980
  1300  0181                     i1l972:
  1301  0181  3002               	movlw	2
  1302  0182  0679               	xorwf	_banderas,w
  1303  0183  1D03               	btfss	3,2
  1304  0184  2986               	goto	u52_21
  1305  0185  2987               	goto	u52_20
  1306  0186                     u52_21:
  1307  0186  2990               	goto	i1l980
  1308  0187                     u52_20:
  1309  0187                     i1l974:
  1310                           
  1311                           ;Prelab7.c: 98:             PORTEbits.RE1 = 0;
  1312  0187  1089               	bcf	9,1	;volatile
  1313                           
  1314                           ;Prelab7.c: 99:             PORTEbits.RE2 = 1;
  1315  0188  1509               	bsf	9,2	;volatile
  1316  0189                     i1l976:
  1317                           
  1318                           ;Prelab7.c: 100:             PORTD = display[centenas];
  1319  0189  083B               	movf	_centenas,w
  1320  018A  3E20               	addlw	(low (_display| 0))& (0+255)
  1321  018B  0084               	movwf	4
  1322  018C  1383               	bcf	3,7	;select IRP bank0
  1323  018D  0800               	movf	0,w
  1324  018E  0088               	movwf	8	;volatile
  1325  018F                     i1l978:
  1326                           
  1327                           ;Prelab7.c: 101:             banderas = 0b00000000;
  1328  018F  01F9               	clrf	_banderas
  1329  0190                     i1l980:
  1330                           
  1331                           ;Prelab7.c: 103:         INTCONbits.T0IF = 0;
  1332  0190  110B               	bcf	11,2	;volatile
  1333  0191                     i1l982:
  1334                           
  1335                           ;Prelab7.c: 104:         TMR0 = 217;
  1336  0191  30D9               	movlw	217
  1337  0192  0081               	movwf	1	;volatile
  1338  0193                     i1l68:
  1339  0193  0873               	movf	??_isr+3,w
  1340  0194  008A               	movwf	10
  1341  0195  0872               	movf	??_isr+2,w
  1342  0196  0084               	movwf	4
  1343  0197  0E71               	swapf	??_isr+1,w
  1344  0198  0083               	movwf	3
  1345  0199  0EFE               	swapf	btemp,f
  1346  019A  0E7E               	swapf	btemp,w
  1347  019B  0009               	retfie
  1348  019C                     __end_of_isr:
  1349  007E                     btemp	set	126	;btemp
  1350  007E                     wtemp0	set	126
  1351                           
  1352                           	psect	intentry
  1353  0004                     __pintentry:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1356                           
  1357  0004                     interrupt_function:
  1358  007E                     saved_w	set	btemp
  1359  0004  00FE               	movwf	btemp
  1360  0005  0E03               	swapf	3,w
  1361  0006  00F1               	movwf	??_isr+1
  1362  0007  0804               	movf	4,w
  1363  0008  00F2               	movwf	??_isr+2
  1364  0009  080A               	movf	10,w
  1365  000A  00F3               	movwf	??_isr+3
  1366  000B  120A  118A  2943   	ljmp	_isr
  1367                           
  1368                           	psect	idloc
  1369                           
  1370                           ;Config register IDLOC0 @ 0x2000
  1371                           ;	unspecified, using default values
  1372  2000                     	org	8192
  1373  2000  3FFF               	dw	16383
  1374                           
  1375                           ;Config register IDLOC1 @ 0x2001
  1376                           ;	unspecified, using default values
  1377  2001                     	org	8193
  1378  2001  3FFF               	dw	16383
  1379                           
  1380                           ;Config register IDLOC2 @ 0x2002
  1381                           ;	unspecified, using default values
  1382  2002                     	org	8194
  1383  2002  3FFF               	dw	16383
  1384                           
  1385                           ;Config register IDLOC3 @ 0x2003
  1386                           ;	unspecified, using default values
  1387  2003                     	org	8195
  1388  2003  3FFF               	dw	16383
  1389                           
  1390                           	psect	config
  1391                           
  1392                           ;Config register CONFIG1 @ 0x2007
  1393                           ;	Oscillator Selection bits
  1394                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1395                           ;	Watchdog Timer Enable bit
  1396                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1397                           ;	Power-up Timer Enable bit
  1398                           ;	PWRTE = OFF, PWRT disabled
  1399                           ;	RE3/MCLR pin function select bit
  1400                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1401                           ;	Code Protection bit
  1402                           ;	CP = OFF, Program memory code protection is disabled
  1403                           ;	Data Code Protection bit
  1404                           ;	CPD = OFF, Data memory code protection is disabled
  1405                           ;	Brown Out Reset Selection bits
  1406                           ;	BOREN = OFF, BOR disabled
  1407                           ;	Internal External Switchover bit
  1408                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1409                           ;	Fail-Safe Clock Monitor Enabled bit
  1410                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1411                           ;	Low Voltage Programming Enable bit
  1412                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1413                           ;	In-Circuit Debugger Mode bit
  1414                           ;	DEBUG = 0x1, unprogrammed default
  1415  2007                     	org	8199
  1416  2007  20D4               	dw	8404
  1417                           
  1418                           ;Config register CONFIG2 @ 0x2008
  1419                           ;	Brown-out Reset Selection bit
  1420                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1421                           ;	Flash Program Memory Self Write Enable bits
  1422                           ;	WRT = OFF, Write protection off
  1423  2008                     	org	8200
  1424  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         1
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _divisiones->___awdiv
    _divisiones->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisiones
    _divisiones->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                         _divisiones
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _divisiones                                           3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divisiones
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Apr 05 22:49:46 2022

                      pc 0002                       l73 01D4                       l82 00E7  
                     l79 01CE             ___awdiv@sign 0035                       fsr 0004  
                    l321 008C                      l334 0142                      l800 01C9  
                    l802 01CD                      l760 01B5                      l770 01BA  
                    l762 01B6                      l780 01BF                      l772 01BB  
                    l764 01B7                      l756 019C                      l790 01C4  
                    l782 01C0                      l774 01BC                      l766 01B8  
                    l758 01B2                      l792 01C5                      l784 01C1  
                    l776 01BD                      l768 01B9                      l794 01C6  
                    l786 01C2                      l778 01BE                      l796 01C7  
                    l788 01C3                      l990 0024                      l798 01C8  
                    l992 0027                      l994 002B                      l996 0030  
                    l998 0032                      u610 007E                      u530 002B  
                    u611 007D                      u531 002A                      u620 0083  
                    u540 0036                      u700 0134                      u621 0082  
                    u605 0072                      u541 0035                      u701 0133  
                    u550 0047                      u710 0139                      u630 00EF  
                    u551 0046                      u711 0138                      u631 00EE  
                    u640 00FA                      u641 00F9                      u570 0059  
                    u650 0105                      u571 0058                      u651 0104  
                    u565 004B                      u590 006A                      u670 0117  
                    u591 0069                      u671 0116                      u680 0121  
                    u585 005A                      u681 0120                      u665 0109  
                    u595 0066                      u685 011D                      u695 0128  
                    _isr 0143                      fsr0 0004                      indf 0000  
           ___awmod@sign 0035                     l1000 0036                     l1010 004A  
                   l1002 003B                     l1020 0070                     l1012 0051  
                   l1004 003F                     l1030 0088                     l1022 0071  
                   l1014 0055                     l1006 0041                     l1024 0078  
                   l1016 0059                     l1008 0047                     l1040 00F4  
                   l1018 006A                     l1026 007E                     l1050 0108  
                   l1042 00F6                     l1034 00E8                     l1028 0083  
                   l1060 0127                     l1052 010F                     l1044 00FA  
                   l1036 00EB                     l1062 012E                     l1054 0113  
                   l1046 00FF                     l1038 00EF                     l1056 0117  
                   l1048 0105                     l1064 0134                     l1072 008D  
                   l1066 0139                     l1058 0121                     l1074 01CF  
                   l1068 013E                     l1076 01D9                     ?_isr 0070  
                   _T0IF 005A                     i1l68 0193                     _TMR0 0001  
                   _main 01CF                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 008D  
        __end_of___awmod 0143                    _ANSEL 0188          ___awdiv@divisor 0030  
                  i1l940 0143                    i1l950 0157                    i1l942 0147  
                  i1l960 0166                    i1l944 014D                    i1l952 0158  
                  i1l970 017C                    i1l962 016C                    i1l954 015C  
                  i1l946 0151                    i1l972 0181                    i1l980 0190  
                  i1l964 016F                    i1l956 015F                    i1l948 0155  
                  i1l982 0191                    i1l974 0187                    i1l966 0174  
                  i1l958 0164                    i1l976 0189                    i1l968 0176  
                  i1l978 018F          ___awdiv@counter 0034                    u50_20 0164  
                  u50_21 0163                    u51_20 0174                    u51_21 0173  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u52_20 0187                    u52_21 0186                    u46_20 0147  
                  u46_21 0146                    u47_20 014D                    u47_21 014C  
                  u48_20 0155                    u48_21 0154                    u49_20 015C  
                  u49_21 015B                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 019C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 01E3                   ??_main 0075         ___awdiv@dividend 0032  
                 ?_setup 0070                   _ANSELH 0189                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0036          ___awmod@divisor 0030  
        ___awmod@counter 0034                   saved_w 007E  __end_of__initialization 0020  
         __pcstackCOMMON 0070             __pidataBANK0 01F6            __end_of_setup 01CF  
         _OPTION_REGbits 0081                  ??_setup 0074               __pnvCOMMON 0076  
             __pmaintext 01CF               __pintentry 0004               _divisiones 008D  
                ___awdiv 0024                  ___awmod 00E8                  _decenas 003C  
                __ptext1 019C                  __ptext2 008D                  __ptext3 00E8  
                __ptext4 0024                  __ptext5 0143                  _display 0020  
       ___awmod@dividend 0032                  _residuo 0076     end_of_initialization 0020  
              _PORTBbits 0006                _PORTEbits 0009                _TRISBbits 0086  
            ?_divisiones 0070      start_initialization 0011              __end_of_isr 019C  
             init_fetch0 01E3              __pdataBANK0 0020              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0030                __pnvBANK0 003B  
               ?___awdiv 0030                 ?___awmod 0030        interrupt_function 0004  
               _IOCBbits 0096                 _WPUBbits 0095             ??_divisiones 0038  
     __end_of_divisiones 00E8                 _banderas 0079                 _centenas 003B  
               _contador 0077                 _unidades 0078               _INTCONbits 000B  
               init_ram0 01E7                 intlevel1 0000               _OSCCONbits 008F  
